// ===========================================================================
// Use of this software is subject to the terms of the Autodesk license
// agreement provided at the time of installation or download, or which
// otherwise accompanies this software in either electronic or hard copy form.
// ===========================================================================
//
//  Description:
//          Get the list of secondary project file rules
//  Input:
//          the value true means it will return the default file rules list.
//          the value false means it will return the file rules list of the current workspace
//
global proc string[] np_getSecondaryProjectFileRules(int $bUseDefaults)
{
    string $defaults[] =
	{
        // Label                                                        file rule name      Default
        (uiRes("m_np_getSecondaryProjectFileRules.kOfflineEdits")),     "offlineEdit",      "assets",
        //now file rule should obey isValidObjectName.change file rule name
        (uiRes("m_np_getSecondaryProjectFileRules.kPaintTextures")),    "3dPaintTextures",  "textures",
        (uiRes("m_np_getSecondaryProjectFileRules.kDepth")),            "depth",            "render",
        (uiRes("m_np_getSecondaryProjectFileRules.kIPRImages")),        "iprImages",        "render",
        (uiRes("m_np_getSecondaryProjectFileRules.kShaders")),          "shaders",          "shaders",
        (uiRes("m_np_getSecondaryProjectFileRules.kFurFiles")),         "furFiles",         "data",
        (uiRes("m_np_getSecondaryProjectFileRules.kFurImages")),        "furImages",        "data",
        (uiRes("m_np_getSecondaryProjectFileRules.kFurEqualizerMap")),  "furEqualMap",      "data",
        (uiRes("m_np_getSecondaryProjectFileRules.kFurAttributeMap")),  "furAttrMap",       "data",
        (uiRes("m_np_getSecondaryProjectFileRules.kFurShadowMap")),     "furShadowMap",     "data",
        (uiRes("m_np_getSecondaryProjectFileRules.kParticleCache")),    "particles",        "cache",
        (uiRes("m_np_getSecondaryProjectFileRules.kFluidCache")),       "fluidCache",       "cache",
        (uiRes("m_np_getSecondaryProjectFileRules.kFileCache")),        "fileCache",        "cache",
        // legal with or without Bifrost loaded.  If not defined then some Maya tools to navigate directories are not activated
        (uiRes("m_np_getSecondaryProjectFileRules.kTimeEditorClips")),  "teClipExports",    "exchange",
        // for internal translator
        (uiRes("m_np_getSecondaryProjectFileRules.kMayaAscii")),        "mayaAscii",        "assets",
        (uiRes("m_np_getSecondaryProjectFileRules.kMayaBinary")),       "mayaBinary",       "assets",
        (uiRes("m_np_getSecondaryProjectFileRules.kMel")),              "mel",              "scripts",
        (uiRes("m_np_getSecondaryProjectFileRules.kObj")),              "OBJ",              "exchange",
        (uiRes("m_np_getSecondaryProjectFileRules.kAudio")),            "audio",            "exchange",
        (uiRes("m_np_getSecondaryProjectFileRules.kMove")),             "move",             "exchange",
        (uiRes("m_np_getSecondaryProjectFileRules.kEPS")),              "eps",              "exchange",
        (uiRes("m_np_getSecondaryProjectFileRules.kIllustrator")),      "illustrator",      "exchange"
    };

    if(!$bUseDefaults)
    {
        int $listSize = size($defaults);
        for($i = 0; $i < $listSize; $i += 3)
        {
            $defaults[$i+2] = `workspace -q -fre $defaults[$i+1]`;
        }
    }

    return $defaults;
}
